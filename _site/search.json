[
  {
    "objectID": "publicados_ano.html",
    "href": "publicados_ano.html",
    "title": "Ocurrencias Publicadas en GBIF por Año",
    "section": "",
    "text": "Cargar librerías necesarias\nlibrary(tidyverse) library(plotly) library(lubridate) library(httr) # Necesario para read_csv con URL library(readr)\n\n\n— OCURRENCIAS PUBLICADAS POR AÑO (Procesando Snapshots del CSV) —\nprint(“Descargando y procesando CSV de snapshots…”) published_by_year_url &lt;- “https://analytics-files.gbif.org/country/EC/publishedBy/csv/occ.csv” occ_published_by_year &lt;- tibble() # Inicializar tabla vacía\ntryCatch({ # Lee el CSV directamente desde la URL raw_snapshots &lt;- read_csv(published_by_year_url, show_col_types = FALSE) # Ocultar mensajes de tipo de columna\n# Nombres de columna confirmados snapshot_date_col &lt;- “snapshot” snapshot_count_col &lt;- “occurrenceCount”\n# Verificar que las columnas existan antes de procesar if (snapshot_date_col %in% colnames(raw_snapshots) && snapshot_count_col %in% colnames(raw_snapshots)) {\n# Procesa los snapshots para obtener cuentas anuales\nocc_published_snapshots &lt;- raw_snapshots %&gt;%\n  select(snapshot_date = all_of(snapshot_date_col), total_count = all_of(snapshot_count_col)) %&gt;%\n  mutate(snapshot_date = ymd(snapshot_date)) %&gt;% # Asume formato AAAA-MM-DD\n  filter(!is.na(snapshot_date)) %&gt;% # Eliminar filas con fechas inválidas\n  arrange(snapshot_date) %&gt;% # Ordena por fecha\n  # Asegurar que no haya duplicados de fecha, manteniendo el último conteo para cada fecha\n  group_by(snapshot_date) %&gt;%\n  filter(row_number() == n()) %&gt;%\n  ungroup() %&gt;%\n  # Calcular diferencia con el registro anterior válido\n  mutate(published_since_last = total_count - lag(total_count, default = 0)) %&gt;%\n  # Corregir posibles valores negativos si el conteo disminuye\n  mutate(published_since_last = ifelse(published_since_last &lt; 0, 0, published_since_last)) %&gt;%\n  mutate(publishing_year = year(snapshot_date)) %&gt;%\n  filter(publishing_year &gt;= 1950, publishing_year &lt;= year(today())) # Filtrar años\n\n# Agrupa por año para obtener el total publicado ESE año\nocc_published_by_year &lt;- occ_published_snapshots %&gt;%\n  group_by(publishing_year) %&gt;%\n  summarise(count_published = sum(published_since_last, na.rm = TRUE), .groups = 'drop') %&gt;%\n  arrange(publishing_year) %&gt;%\n  mutate(cumulative_published = cumsum(count_published)) # Calcula el acumulado final\n\nprint(\"CSV de snapshots procesado para obtener cuentas anuales.\")\nprint(paste(\"Dim 'occ_published_by_year':\", paste(dim(occ_published_by_year), collapse = \" x \")))\n} else { print(paste(“Error: Las columnas requeridas (‘“, snapshot_date_col,”’, ‘“, snapshot_count_col,”’) no se encontraron en el CSV.”)) }\n}, error = function(e) { print(paste(“Error descargando o procesando el CSV de snapshots:”, e$message)) # Dejar occ_published_by_year como tabla vacía si hay error })\n\n\nRenombrar columnas para usar en el gráfico\nrecords_per_year_published &lt;- occ_published_by_year %&gt;% rename(year = publishing_year, total_records_published = count_published)\n#| title: Número Estimado de Registros Publicados en GBIF por Año # Muestra cuántos registros nuevos se añadieron a GBIF cada año (estimado).\ncumulative_color_published &lt;- “#440154FF” # Morado\nfig_published &lt;- plot_ly() %&gt;% add_bars( data = records_per_year_published, x = ~year, y = ~total_records_published, name = “Registros publicados por año”, marker = list(color = “#7AD151FF”) # Verde claro ) %&gt;% add_lines( data = records_per_year_published, x = ~year, y = ~cumulative_published, name = “Total Acumulado Publicado”, yaxis = “y2”, line = list(color = cumulative_color_published, width = 2) ) %&gt;% layout( xaxis = list(title = “Año de Publicación en GBIF”), yaxis = list(title = “Registros Publicados por Año (log)”, type = “log”, rangemode = “nonnegative”), yaxis2 = list(overlaying = “y”, side = “right”, type = “log”, title = list(text = “Total Acumulativo Publicado (log)”), rangemode = “nonnegative”), margin = list(r = 80), legend = list(x = 0.05, y = 0.95) )\n\n\nMostrar gráfico si hay datos\nif(nrow(records_per_year_published) &gt; 0) { fig_published } else { print(“No se pudieron cargar/procesar los datos de ocurrencias publicadas por año.”) }"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Inicio - Dashboard Biodiversidad Ecuador",
    "section": "",
    "text": "Este sitio muestra tendencias sobre los datos de biodiversidad de Ecuador disponibles a través de GBIF.\nSe presentan dos visualizaciones principales:\n\nOcurrencias por Año de Evento: Muestra cuántos registros (observaciones o colectas) se realizaron en cada año. (Datos de la API de GBIF).\nPublicados por Año GBIF: Muestra una estimación de cuántos registros nuevos se añadieron a GBIF cada año. (Datos procesados de un archivo CSV de GBIF).\n\nUsa la barra de navegación superior para explorar los gráficos."
  },
  {
    "objectID": "index.html#bienvenido",
    "href": "index.html#bienvenido",
    "title": "Inicio - Dashboard Biodiversidad Ecuador",
    "section": "",
    "text": "Este sitio muestra tendencias sobre los datos de biodiversidad de Ecuador disponibles a través de GBIF.\nSe presentan dos visualizaciones principales:\n\nOcurrencias por Año de Evento: Muestra cuántos registros (observaciones o colectas) se realizaron en cada año. (Datos de la API de GBIF).\nPublicados por Año GBIF: Muestra una estimación de cuántos registros nuevos se añadieron a GBIF cada año. (Datos procesados de un archivo CSV de GBIF).\n\nUsa la barra de navegación superior para explorar los gráficos."
  },
  {
    "objectID": "ocurrencias_evento.html",
    "href": "ocurrencias_evento.html",
    "title": "Ocurrencias por Año de Colecta/Observación",
    "section": "",
    "text": "Cargar librerías necesarias\nlibrary(tidyverse) library(plotly) library(rgbif) library(lubridate)\n\n\n— OCURRENCIAS POR AÑO DE EVENTO (API GBIF) —\nprint(“Buscando conteos de ocurrencias por AÑO DE EVENTO para Ecuador…”) occurrence_counts_by_event_year &lt;- occ_search( country = “EC”, facet = “year”, facetLimit = 200, limit = 0 )\\(facets\\)year$counts %&gt;% as_tibble() %&gt;% rename(year = name, count = count) %&gt;% mutate(year = as.integer(year), count = as.integer(count)) %&gt;% filter(year &gt;= 1800, year &lt;= year(today())) %&gt;% arrange(year) %&gt;% mutate(cumulative_occ_event = cumsum(count))\nprint(“Conteos por año de evento obtenidos.”)\n\n\nRenombrar para el gráfico\nrecords_per_year_event &lt;- occurrence_counts_by_event_year %&gt;% rename(created_year = year, total_occurrence_records = count)\n#| title: Número de Registros por Año de Colecta/Observación # Muestra cuántos registros se colectaron/observaron en cada año.\ncumulative_color_event &lt;- “#F8760D” # Naranja\nfig_event &lt;- plot_ly() %&gt;% add_bars( data = records_per_year_event, x = ~created_year, y = ~total_occurrence_records, name = “Registros por año”, marker = list(color = “#21908CFF”) ) %&gt;% add_lines( data = records_per_year_event, x = ~created_year, y = ~cumulative_occ_event, name = “Total Acumulativo”, yaxis = “y2”, line = list(color = cumulative_color_event, width = 2) ) %&gt;% layout( xaxis = list(title = “Año de Colecta/Observación”), yaxis = list(title = “Registros por Año (log)”, type = “log”, rangemode = “nonnegative”), yaxis2 = list(overlaying = “y”, side = “right”, type = “log”, title = list(text = “Total Acumulativo (log)”), rangemode = “nonnegative”), margin = list(r = 80), legend = list(x = 0.05, y = 0.95) )\n\n\nMostrar gráfico si hay datos\nif(nrow(records_per_year_event) &gt; 0) { fig_event } else { print(“No hay datos de ocurrencias por año de evento.”) }"
  }
]